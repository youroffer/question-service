// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"

	"github.com/go-faster/jx"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/Category
type Category struct {
	ID    int    `json:"id"`
	Title string `json:"title"`
}

// GetID returns the value of ID.
func (s *Category) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Category) GetTitle() string {
	return s.Title
}

// SetID sets the value of ID.
func (s *Category) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Category) SetTitle(val string) {
	s.Title = val
}

func (*Category) v1CategoriesPostRes() {}

// Ref: #/components/schemas/CategoryInput
type CategoryInput struct {
	Title string `json:"title"`
}

// GetTitle returns the value of Title.
func (s *CategoryInput) GetTitle() string {
	return s.Title
}

// SetTitle sets the value of Title.
func (s *CategoryInput) SetTitle(val string) {
	s.Title = val
}

// Ref: #/components/schemas/Error
type Error struct {
	// Error message.
	Message string       `json:"message"`
	Details ErrorDetails `json:"details"`
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// GetDetails returns the value of Details.
func (s *Error) GetDetails() ErrorDetails {
	return s.Details
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// SetDetails sets the value of Details.
func (s *Error) SetDetails(val ErrorDetails) {
	s.Details = val
}

type ErrorDetails map[string]jx.Raw

func (s *ErrorDetails) init() ErrorDetails {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

type V1CategoriesPostBadRequest Error

func (*V1CategoriesPostBadRequest) v1CategoriesPostRes() {}

type V1CategoriesPostConflict Error

func (*V1CategoriesPostConflict) v1CategoriesPostRes() {}

type V1CategoriesPostUnauthorized Error

func (*V1CategoriesPostUnauthorized) v1CategoriesPostRes() {}
